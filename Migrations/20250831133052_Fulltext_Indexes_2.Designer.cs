// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using ZeonService.Data;

#nullable disable

namespace ZeonService.Migrations
{
    [DbContext(typeof(ZeonDbContext))]
    [Migration("20250831133052_Fulltext_Indexes_2")]
    partial class Fulltext_Indexes_2
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("ZeonService.Models.Category", b =>
                {
                    b.Property<long>("CategoryId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("category_id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("CategoryId"));

                    b.Property<string>("Link")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("character varying(500)")
                        .HasColumnName("link");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("character varying(200)")
                        .HasColumnName("name");

                    b.Property<long?>("ParentCategoryId")
                        .HasColumnType("bigint")
                        .HasColumnName("parent_category_id");

                    b.HasKey("CategoryId")
                        .HasName("category_pkey");

                    b.HasAlternateKey("Link")
                        .HasName("category_link_key");

                    b.HasIndex("Name")
                        .HasDatabaseName("idx_category_name");

                    NpgsqlIndexBuilderExtensions.HasMethod(b.HasIndex("Name"), "gist");
                    NpgsqlIndexBuilderExtensions.HasOperators(b.HasIndex("Name"), new[] { "gist_trgm_ops" });

                    b.HasIndex("ParentCategoryId")
                        .HasDatabaseName("idx_category_parent_category_id_fkey");

                    b.ToTable("categories", (string)null);
                });

            modelBuilder.Entity("ZeonService.Models.Product", b =>
                {
                    b.Property<long>("ProductId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("product_id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("ProductId"));

                    b.Property<long>("CategoryId")
                        .HasColumnType("bigint")
                        .HasColumnName("category_id");

                    b.Property<decimal>("CurrentPrice")
                        .HasColumnType("decimal(18,2)")
                        .HasColumnName("current_price");

                    b.Property<string>("ImagePath")
                        .IsRequired()
                        .HasMaxLength(204)
                        .HasColumnType("character varying(204)")
                        .HasColumnName("image_path");

                    b.Property<string>("Link")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("character varying(500)")
                        .HasColumnName("link");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("character varying(200)")
                        .HasColumnName("name");

                    b.Property<decimal?>("OldPrice")
                        .HasColumnType("decimal(18,2)")
                        .HasColumnName("old_price");

                    b.Property<string>("Specifications")
                        .HasColumnType("jsonb")
                        .HasColumnName("specifications");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("updated_at");

                    b.HasKey("ProductId")
                        .HasName("product_pkey");

                    b.HasAlternateKey("Link")
                        .HasName("product_link_key");

                    b.HasIndex("CategoryId")
                        .HasDatabaseName("idx_product_category_id_fkey");

                    b.HasIndex("Name")
                        .HasDatabaseName("idx_product_name");

                    NpgsqlIndexBuilderExtensions.HasMethod(b.HasIndex("Name"), "gist");
                    NpgsqlIndexBuilderExtensions.HasOperators(b.HasIndex("Name"), new[] { "gist_trgm_ops" });

                    b.ToTable("products", null, t =>
                        {
                            t.HasCheckConstraint("ck_product_current_price", "current_price > 0");

                            t.HasCheckConstraint("ck_product_price_logic", "old_price is null or old_price > current_price");
                        });
                });

            modelBuilder.Entity("ZeonService.Models.Category", b =>
                {
                    b.HasOne("ZeonService.Models.Category", "ParentCategory")
                        .WithMany("ChildCategories")
                        .HasForeignKey("ParentCategoryId")
                        .HasConstraintName("category_parent_category_id_fkey");

                    b.Navigation("ParentCategory");
                });

            modelBuilder.Entity("ZeonService.Models.Product", b =>
                {
                    b.HasOne("ZeonService.Models.Category", "Category")
                        .WithMany("Products")
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired()
                        .HasConstraintName("product_category_id_fkey");

                    b.Navigation("Category");
                });

            modelBuilder.Entity("ZeonService.Models.Category", b =>
                {
                    b.Navigation("ChildCategories");

                    b.Navigation("Products");
                });
#pragma warning restore 612, 618
        }
    }
}
